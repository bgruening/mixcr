Usage: mixcr exportShmTreesWithNodes [--split-by-tags (Molecule|Cell|Sample)] [--only-observed]
                                     [--filter-min-nodes <n>] [--filter-min-height <n>] [--ids <id>
                                     [,<id>...]]... [--chains <chains>] [--preset <preset>]
                                     [--preset-file <presetFile>] [--no-header]
                                     [--not-covered-as-empty] [-treeId] [-subtreeId]
                                     [-numberOfClonesInTree [forChain]]...
                                     [-numberOfNodesWithClones] [-totalReadsCountInTree
                                     [forChain]]... [-totalUniqueTagCountInTree
                                     (Molecule|Cell|Sample) [forChain]]... [-chains] [-treeHeight]
                                     [-nodeId] [-isObserved] [-parentId] [-distance
                                     (germline|mrca|parent)]... [-targets] [-vHit] [-dHit] [-jHit]
                                     [-cHit] [-vGene] [-dGene] [-jGene] [-cGene] [-vFamily]
                                     [-dFamily] [-jFamily] [-cFamily] [-vHitScore] [-dHitScore]
                                     [-jHitScore] [-cHitScore] [-vHitsWithScore] [-dHitsWithScore]
                                     [-jHitsWithScore] [-cHitsWithScore] [-vHits] [-dHits] [-jHits]
                                     [-cHits] [-vGenes] [-dGenes] [-jGenes] [-cGenes] [-vFamilies]
                                     [-dFamilies] [-jFamilies] [-cFamilies] [-vAlignment]
                                     [-dAlignment] [-jAlignment] [-cAlignment] [-vAlignments]
                                     [-dAlignments] [-jAlignments] [-cAlignments] [-nFeature
                                     <gene_feature> [(germline|mrca|parent)]]... [-allNFeatures
                                     [(germline|mrca|parent)]]... [-qFeature <gene_feature>]...
                                     [-allQFeatures [<from_reference_point>
                                     <to_reference_point>]]... [-aaFeature <gene_feature>
                                     [(germline|mrca|parent)]]... [-allAAFeatures
                                     [(germline|mrca|parent)]]... [-nFeatureImputed
                                     <gene_feature>]... [-allNFeaturesImputed
                                     [<from_reference_point> <to_reference_point>]]...
                                     [-aaFeatureImputed <gene_feature>]... [-allAAFeaturesImputed
                                     [<from_reference_point> <to_reference_point>]]...
                                     [-minFeatureQuality <gene_feature>]... [-allMinFeaturesQuality
                                     [<from_reference_point> <to_reference_point>]]...
                                     [-allNFeaturesWithMinQuality [<from_reference_point>
                                     <to_reference_point>]]... [-allNFeaturesImputedWithMinQuality
                                     [<from_reference_point> <to_reference_point>]]...
                                     [-avrgFeatureQuality <gene_feature>]...
                                     [-allAvrgFeaturesQuality [<from_reference_point>
                                     <to_reference_point>]]... [-nLength <gene_features>
                                     [(germline|mrca|parent)]]... [-allNLength
                                     [(germline|mrca|parent)]]... [-aaLength <gene_features>
                                     [(germline|mrca|parent)]]... [-allAALength
                                     [(germline|mrca|parent)]]... [-nMutations <gene_feature>
                                     [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]... [-allNMutations
                                     [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-nMutationsRelative <gene_feature> <relative_to_gene_feature>
                                     [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]... [-aaMutations
                                     <gene_feature> [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-allAAMutations [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-aaMutationsRelative <gene_feature>
                                     <relative_to_gene_feature> [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-mutationsDetailed <gene_feature>
                                     [(germline|mrca|parent)]]... [-allMutationsDetailed
                                     [(germline|mrca|parent)]]... [-mutationsDetailedRelative
                                     <gene_feature> <relative_to_gene_feature>
                                     [(germline|mrca|parent)]]... [-nMutationsCount
                                     [<gene_features>] [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-allNMutationsCount [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-aaMutationsCount [<gene_features>] [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-allAAMutationsCount [(germline|mrca|parent)]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-positionInReferenceOf <reference_point>]...
                                     [-allPositionsInReference [<from_reference_point>
                                     <to_reference_point>]]... [-positionOf <reference_point>]...
                                     [-allPositions [<from_reference_point>
                                     <to_reference_point>]]... [-defaultAnchorPoints] [-fileName]
                                     [-cloneId] [-readCount] [-rankByReads] [-readFraction]
                                     [-targetSequences] [-targetQualities] [-vIdentityPercents]
                                     [-dIdentityPercents] [-jIdentityPercents] [-cIdentityPercents]
                                     [-vBestIdentityPercent] [-dBestIdentityPercent]
                                     [-jBestIdentityPercent] [-cBestIdentityPercent]
                                     [-nMutationsRate [<gene_features>]
                                     [(substitutions|indels|inserts|deletions)]]...
                                     [-aaMutationsRate [<gene_features>]
                                     [(substitutions|indels|inserts|deletions)]]... [-topChains]
                                     [-geneLabel <label>]... [-isotype
                                     [(primary|subclass|auto)]]... [-tagCounts] [-cellId
                                     [(none|space|dash)]]... [-tags (Molecule|Cell|Sample)]...
                                     [-uniqueTagCount (Molecule|Cell|Sample)]...
                                     [-uniqueTagFraction (Molecule|Cell|Sample)]... [-cellGroup]
                                     [-rankByTag (Molecule|Cell|Sample)]... [-hasStops
                                     <gene_feature>]... [-isOOF <gene_feature>]... [-isProductive
                                     [<gene_feature>]]... [-biochemicalProperty <gene_feature>
                                     <property> [(germline|mrca|parent)]]...
                                     [-baseBiochemicalProperties <gene_feature>
                                     [(germline|mrca|parent)]]... [--use-local-temp]
                                     [--force-overwrite] [--no-warnings] [--verbose] [--help]
                                     [[--filter-in-feature <gene_feature>] [--pattern-max-errors
                                     <n>] (--filter-aa-pattern <pattern> | --filter-nt-pattern
                                     <pattern>)] trees.shmt [trees.tsv]
Export SHMTree as a table with a row for every clone or reconstructed node for each root (only one
root if no single cell data)
      trees.shmt             Input file produced by 'findShmTrees' command.
      [trees.tsv]            Path where to write output export table. Print in stdout if omitted.
      --split-by-tags (Molecule|Cell|Sample)
                             Split clones by tag type. Will be calculated from export columns if
                               not specified.
      --only-observed        Exclude nodes that was reconstructed by algorithm
      --filter-min-nodes <n> Minimal number of nodes in tree
      --filter-min-height <n>
                             Minimal height of the tree
      --ids <id>[,<id>...]   Filter specific trees by id
      --chains <chains>      Export only trees that contains clones with specific chain (e.g. TRA
                               or IGH).
  -p, --preset <preset>      Specify preset of export fields. Possible values: min, default.
      -pf, --preset-file <presetFile>
                             Specify preset file of export fields
      --no-header            Don't print first header line, print only data
      --not-covered-as-empty Export not covered regions as empty text.
      --use-local-temp       Put temporary files in the same folder as the output files.
  -f, --force-overwrite      Force overwrite of output file(s).
      -nw, --no-warnings     Suppress all warning messages.
      --verbose              Verbose messages.
  -h, --help                 Show this help message and exit.
Filter by pattern
      --filter-in-feature <gene_feature>
                             Match pattern inside specified gene feature.
                               Default: CDR3
      --pattern-max-errors <n>
                             Max allowed subs & indels.
                               Default: 0
      --filter-aa-pattern <pattern>
                             Filter specific trees by aa pattern.
      --filter-nt-pattern <pattern>
                             Filter specific trees by nt pattern.
Possible fields to export
      -treeId                SHM tree id
      -subtreeId             Id for different roots in single cell trees
      -numberOfClonesInTree [forChain]
                             Number of uniq clones in the SHM tree. If first parameter is
                               `forChain`, will calculate for this root, otherwise, for all roots
                               combined.
      -numberOfNodesWithClones
                             Number of nodes with clones, i.e. nodes with different clone
                               sequences. Other differences are not counting such as: isotypes,
                               sample, cell.
      -totalReadsCountInTree [forChain]
                             Total sum of read counts of clones in the SHM tree. If first parameter
                               is `forChain`, will calculate for this root, otherwise, for all
                               roots combined.
      -totalUniqueTagCountInTree (Molecule|Cell|Sample) [forChain]
                             Total count of unique tags in the SHM tree with specified type. If
                               first parameter is `forChain`, will calculate for this root,
                               otherwise, for all roots combined.
      -chains                Chain type of the tree
      -treeHeight            Height of the tree
      -nodeId                Node id in SHM tree
      -isObserved            Is node have clones. All other nodes are reconstructed by algorithm
      -parentId              Parent node id in SHM tree
      -distance (germline|mrca|parent)
                             Distance from another node in number of mutations.
      -targets               Export number of targets (only for nodes with clones)
      -vHit                  Export best V hit
      -dHit                  Export best D hit (only for nodes with clones)
      -jHit                  Export best J hit
      -cHit                  Export best C hit (only for nodes with clones)
      -vGene                 Export best V hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -dGene                 Export best D hit gene name (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -jGene                 Export best J hit gene name (e.g. TRBV12-3 for TRBV12-3*00)
      -cGene                 Export best C hit gene name (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -vFamily               Export best V hit family name (e.g. TRBV12 for TRBV12-3*00)
      -dFamily               Export best D hit family name (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -jFamily               Export best J hit family name (e.g. TRBV12 for TRBV12-3*00)
      -cFamily               Export best C hit family name (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -vHitScore             Export score for best V hit (only for nodes with clones)
      -dHitScore             Export score for best D hit (only for nodes with clones)
      -jHitScore             Export score for best J hit (only for nodes with clones)
      -cHitScore             Export score for best C hit (only for nodes with clones)
      -vHitsWithScore        Export all V hits with score (only for nodes with clones)
      -dHitsWithScore        Export all D hits with score (only for nodes with clones)
      -jHitsWithScore        Export all J hits with score (only for nodes with clones)
      -cHitsWithScore        Export all C hits with score (only for nodes with clones)
      -vHits                 Export all V hits (only for nodes with clones)
      -dHits                 Export all D hits (only for nodes with clones)
      -jHits                 Export all J hits (only for nodes with clones)
      -cHits                 Export all C hits (only for nodes with clones)
      -vGenes                Export all V gene names (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -dGenes                Export all D gene names (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -jGenes                Export all J gene names (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -cGenes                Export all C gene names (e.g. TRBV12-3 for TRBV12-3*00) (only for
                               nodes with clones)
      -vFamilies             Export all V gene family anmes (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -dFamilies             Export all D gene family anmes (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -jFamilies             Export all J gene family anmes (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -cFamilies             Export all C gene family anmes (e.g. TRBV12 for TRBV12-3*00) (only for
                               nodes with clones)
      -vAlignment            Export best V alignment (only for nodes with clones)
      -dAlignment            Export best D alignment (only for nodes with clones)
      -jAlignment            Export best J alignment (only for nodes with clones)
      -cAlignment            Export best C alignment (only for nodes with clones)
      -vAlignments           Export all V alignments (only for nodes with clones)
      -dAlignments           Export all D alignments (only for nodes with clones)
      -jAlignments           Export all J alignments (only for nodes with clones)
      -cAlignments           Export all C alignments (only for nodes with clones)
      -nFeature <gene_feature> [(germline|mrca|parent)]
                             Export nucleotide sequence of specified gene feature.
                             If second arg is omitted, then feature will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -allNFeatures [(germline|mrca|parent)]
                             Export nucleotide sequences for all covered gene features.
                             If first arg is omitted, then feature will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -qFeature <gene_feature>
                             Export quality string of specified gene feature (only for nodes with
                               clones)
      -allQFeatures [<from_reference_point> <to_reference_point>]
                             Export quality string for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allQFeatures FR3Begin FR4End` will export `-qFeature
                               FR3`, `-qFeature CDR3`, `-qFeature FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -aaFeature <gene_feature> [(germline|mrca|parent)]
                             Export amino acid sequence of specified gene feature.
                             If second arg is omitted, then feature will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -allAAFeatures [(germline|mrca|parent)]
                             Export amino acid sequences for all covered gene features.
                             If first arg is omitted, then feature will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -nFeatureImputed <gene_feature>
                             Export nucleotide sequence of specified gene feature using letters
                               from germline (marked lowercase) for uncovered regions (only for
                               nodes with clones)
      -allNFeaturesImputed [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequence using letters from germline (marked
                               lowercase) for uncovered regions for all gene features between
                               specified reference points (in separate columns).
                             For example, `-allNFeaturesImputed FR3Begin FR4End` will export
                               `-nFeatureImputed FR3`, `-nFeatureImputed CDR3`, `-nFeatureImputed
                               FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -aaFeatureImputed <gene_feature>
                             Export amino acid sequence of specified gene feature using letters
                               from germline (marked lowercase) for uncovered regions (only for
                               nodes with clones)
      -allAAFeaturesImputed [<from_reference_point> <to_reference_point>]
                             Export amino acid sequence using letters from germline (marked
                               lowercase) for uncovered regions for all gene features between
                               specified reference points (in separate columns).
                             For example, `-allAAFeaturesImputed FR3Begin FR4End` will export
                               `-aaFeatureImputed FR3`, `-aaFeatureImputed CDR3`,
                               `-aaFeatureImputed FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -minFeatureQuality <gene_feature>
                             Export minimal quality of specified gene feature (only for nodes with
                               clones)
      -allMinFeaturesQuality [<from_reference_point> <to_reference_point>]
                             Export minimal quality for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allMinFeaturesQuality FR3Begin FR4End` will export
                               `-minFeatureQuality FR3`, `-minFeatureQuality CDR3`,
                               `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -allNFeaturesWithMinQuality [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequences and minimal quality for all gene features
                               between specified reference points (in separate columns).
                             For example, `-allNFeaturesWithMinQuality FR3Begin FR4End` will export
                               `-nFeature FR3`, `-minFeatureQuality FR3`, `-nFeature CDR3`,
                               `-minFeatureQuality CDR3`, `-nFeature FR4`, `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -allNFeaturesImputedWithMinQuality [<from_reference_point> <to_reference_point>]
                             Export nucleotide sequences and minimal quality for all gene features
                               between specified reference points (in separate columns).
                             For example, `-allNFeaturesImputedWithMinQuality FR3Begin FR4End` will
                               export `-nFeatureImputed FR3`, `-minFeatureQuality FR3`,
                               `-nFeatureImputed CDR3`, `-minFeatureQuality CDR3`,
                               `-nFeatureImputed FR4`, `-minFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -avrgFeatureQuality <gene_feature>
                             Export average quality of specified gene feature (only for nodes with
                               clones)
      -allAvrgFeaturesQuality [<from_reference_point> <to_reference_point>]
                             Export average quality for all gene features between specified
                               reference points (in separate columns).
                             For example, `-allAvrgFeaturesQuality FR3Begin FR4End` will export
                               `-avrgFeatureQuality FR3`, `-avrgFeatureQuality CDR3`,
                               `-avrgFeatureQuality FR4`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -nLength <gene_features> [(germline|mrca|parent)]
                             Export count of nucleotides of specified gene feature.
                             If second arg is omitted, then length will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -allNLength [(germline|mrca|parent)]
                             Export count of nucleotides for all covered gene features.
                             If first arg is omitted, then length will be printed for current node.
                               Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -aaLength <gene_features> [(germline|mrca|parent)]
                             Export count of amino acids of specified gene feature.
                             If second arg is omitted, then length will be printed for current
                               node. Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -allAALength [(germline|mrca|parent)]
                             Export count of amino acids for all covered gene features.
                             If first arg is omitted, then length will be printed for current node.
                               Otherwise - for corresponding `parent`, `germline` or `mrca`.
      -nMutations <gene_feature> [(germline|mrca|parent)] [(substitutions|indels|inserts|deletions)]
                             Extract nucleotide mutations from specific node for specific gene
                               feature.
                             If second arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Third parameter will filter mutations by type, by default no
                               filtering.
      -allNMutations [(germline|mrca|parent)] [(substitutions|indels|inserts|deletions)]
                             Extract nucleotide mutations from specific node for all covered gene
                               features.
                             If first arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Second parameter will filter mutations by type, by default
                               no filtering.
      -nMutationsRelative <gene_feature> <relative_to_gene_feature> [(germline|mrca|parent)]
        [(substitutions|indels|inserts|deletions)]
                             Extract nucleotide mutations from specific node for specific gene
                               feature relative to another feature.
                             If third arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Forth parameter will filter mutations by type, by default no
                               filtering.
      -aaMutations <gene_feature> [(germline|mrca|parent)]
        [(substitutions|indels|inserts|deletions)]
                             Extract amino acid mutations from specific node for specific gene
                               feature.
                             If second arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Third parameter will filter mutations by type, by default no
                               filtering.
      -allAAMutations [(germline|mrca|parent)] [(substitutions|indels|inserts|deletions)]
                             Extract amino acid mutations from specific node for all covered gene
                               features.
                             If first arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Second parameter will filter mutations by type, by default
                               no filtering.
      -aaMutationsRelative <gene_feature> <relative_to_gene_feature> [(germline|mrca|parent)]
        [(substitutions|indels|inserts|deletions)]
                             Extract amino acid mutations from specific node for specific gene
                               feature relative to another feature.
                             If third arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Forth parameter will filter mutations by type, by default no
                               filtering.
      -mutationsDetailed <gene_feature> [(germline|mrca|parent)]
                             Detailed list of nucleotide and corresponding amino acid mutations
                               from specific node.
                             If second arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`.
                             Format <nt_mutation>:<aa_mutation_individual>:
                               <aa_mutation_cumulative>, where <aa_mutation_individual> is an
                               expected amino acid mutation given no other mutations have occurred,
                               and <aa_mutation_cumulative> amino acid mutation is the observed
                               amino acid mutation combining effect from all other. WARNING: format
                               may change in following versions.
      -allMutationsDetailed [(germline|mrca|parent)]
                             Detailed list of nucleotide and corresponding amino acid mutations
                               from specific node for all covered gene features.
                             If first arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`.
      -mutationsDetailedRelative <gene_feature> <relative_to_gene_feature> [(germline|mrca|parent)]
                             Detailed list of nucleotide and corresponding amino acid mutations
                               written, positions relative to specified gene feature.
                             If third arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`.
                             Format <nt_mutation>:<aa_mutation_individual>:
                               <aa_mutation_cumulative>, where <aa_mutation_individual> is an
                               expected amino acid mutation given no other mutations have occurred,
                               and <aa_mutation_cumulative> amino acid mutation is the observed
                               amino acid mutation combining effect from all other. WARNING: format
                               may change in following versions.
      -nMutationsCount [<gene_features>] [(germline|mrca|parent)]
        [(substitutions|indels|inserts|deletions)]
                             Number of nucleotide mutations. By default, will be used all covered
                               features. Resolutions of wildcards in VJJunction are excluded from
                               calculation.
                             If second arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Third parameter will filter mutations by type, by default no
                               filtering.
      -allNMutationsCount [(germline|mrca|parent)] [(substitutions|indels|inserts|deletions)]
                             Number of nucleotide mutations for all covered gene features.
                               Resolutions of wildcards in VJJunction are excluded from calculation.
                             If first arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Second parameter will filter mutations by type, by default
                               no filtering.
      -aaMutationsCount [<gene_features>] [(germline|mrca|parent)]
        [(substitutions|indels|inserts|deletions)]
                             Number of amino acid mutations. By default, will be used all covered
                               features. Resolutions of wildcards in CDR3 are excluded from
                               calculation.
                             If second arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Third parameter will filter mutations by type, by default no
                               filtering.
      -allAAMutationsCount [(germline|mrca|parent)] [(substitutions|indels|inserts|deletions)]
                             Number of amino acid mutations for all covered gene features.
                               Resolutions of wildcards in CDR3 are excluded from calculation.
                             If first arg is omitted, then mutations will be calculated from
                               germline. Otherwise - for corresponding `parent`, `germline` or
                               `mrca`. Second parameter will filter mutations by type, by default
                               no filtering.
      -positionInReferenceOf <reference_point>
                             Export position of specified reference point inside reference
                               sequences (clonal sequence / read sequence). (only for nodes with
                               clones)
      -allPositionsInReference [<from_reference_point> <to_reference_point>]
                             Export position inside reference sequences (clonal sequence / read
                               sequence) for all reference points between specified (in separate
                               columns).
                             For example, `-allPositionsInReference FR3Begin FR4End` will export
                               `-positionInReferenceOf FR3Begin`, -positionInReferenceOf
                               CDR3Begin`, -positionInReferenceOf CDR3End` and
                               `-positionInReferenceOf FR4End`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -positionOf <reference_point>
                             Export position of specified reference point inside target sequences
                               (clonal sequence / read sequence). (only for nodes with clones)
      -allPositions [<from_reference_point> <to_reference_point>]
                             Export position inside target sequences (clonal sequence / read
                               sequence) for all reference points between specified (in separate
                               columns).
                             For example, `-allPositions FR3Begin FR4End` will export `-positionOf
                               FR3Begin`, -positionOf CDR3Begin`, -positionOf CDR3End` and
                               `-positionOf FR4End`.
                             By default, boundaries will be got from analysis parameters if
                               possible or `FR1Begin FR4End` otherwise. (only for nodes with clones)
      -defaultAnchorPoints   Outputs a list of default reference points (like CDR2Begin, FR4End,
                               etc. see documentation for the full list and formatting) (only for
                               nodes with clones)
      -fileName              Name of clns file with sample
      -cloneId               Unique clone identifier (only for nodes with clones)
      -readCount             Number of reads assigned to the clonotype (only for nodes with clones)
      -rankByReads           Rank by number of reads assigned to the clonotype, i.e how many clones
                               have equal or more count (only for nodes with clones)
      -readFraction          Fraction of reads assigned to the clonotype (only for nodes with
                               clones)
      -targetSequences       Export aligned sequences (targets), separated with comma (only for
                               nodes with clones)
      -targetQualities       Export aligned sequence (target) qualities, separated with comma (only
                               for nodes with clones)
      -vIdentityPercents     V alignment identity percents (only for nodes with clones)
      -dIdentityPercents     D alignment identity percents (only for nodes with clones)
      -jIdentityPercents     J alignment identity percents (only for nodes with clones)
      -cIdentityPercents     C alignment identity percents (only for nodes with clones)
      -vBestIdentityPercent  V best alignment identity percent
      -dBestIdentityPercent  D best alignment identity percent (only for nodes with clones)
      -jBestIdentityPercent  J best alignment identity percent
      -cBestIdentityPercent  C best alignment identity percent (only for nodes with clones)
      -nMutationsRate [<gene_features>] [(substitutions|indels|inserts|deletions)]
                             Number of nucleotide mutations from germline divided by target
                               sequence size. By default, will be used all covered features.
                               Resolutions of wildcards in VJJunction are excluded from
                               calculation. Second parameter will filter mutations by type, by
                               default no filtering.
      -aaMutationsRate [<gene_features>] [(substitutions|indels|inserts|deletions)]
                             Number of amino acid mutations from germline divided by target
                               sequence size. By default, will be used all covered features.
                               Resolutions of wildcards in CDR3 are excluded from calculation.
                               Second parameter will filter mutations by type, by default no
                               filtering.
      -topChains             Top chains (only for nodes with clones)
      -geneLabel <label>     Export gene label (i.e. ReliableChain) (only for nodes with clones)
      -isotype [(primary|subclass|auto)]
                             Export isotype for IGH chains if it's can be distinguishable.
                               `primary` will resolve 'IgA', 'IgD', 'IgG', 'IgE', 'IgM'. `subtype`
                               will try resolve isotypes like 'IgA1' or 'IgA2'. `auto` will resolve
                               the best resolution as possible. By default `auto` will be used
                               (only for nodes with clones)
      -tagCounts             All tags with counts (only for nodes with clones)
      -cellId [(none|space|dash)]
                             Concatenated all cell tags with specified delimiter, default delimiter
                               is `none`.
                             Example output for `-cellId`: GGATTACTCATTGCCC
                             Example output for `-cellId dash`: GGATTACT-CATTGCCC (only for nodes
                               with clones)
      -tags (Molecule|Cell|Sample)
                             All tags values (i.e. CELL barcode or UMI sequence) (only for nodes
                               with clones)
      -uniqueTagCount (Molecule|Cell|Sample)
                             Unique tag count (only for nodes with clones)
      -uniqueTagFraction (Molecule|Cell|Sample)
                             Fraction of unique tags (UMI, CELL, etc.) the clone or alignment
                               collected. (only for nodes with clones)
      -cellGroup             Unique cell group identifier (only for nodes with clones)
      -rankByTag (Molecule|Cell|Sample)
                             Rank by count of unique tags, i.e how many clones have equal or more
                               count (only for nodes with clones)
      -hasStops <gene_feature>
                             Whether gene feature has stop codons inside
      -isOOF <gene_feature>  Whether gene feature is OOF
      -isProductive [<gene_feature>]
                             Whether specified gene feature is productive (no stops and not OOF).
                               If first arg is omitted, will calculate for all covered features
      -biochemicalProperty <gene_feature> <property> [(germline|mrca|parent)]
                             Biochemical property of specified gene feature normalized by AA
                               sequence size. CDR3 can be exported only for nodes with clones.
                               Possible values: Hydropathy, Charge, Polarity, Volume, Strength,
                               MjEnergy, Kf1, Kf2, Kf3, Kf4, Kf5, Kf6, Kf7, Kf8, Kf9, Kf10, Rim,
                               Surface, Turn, Alpha, Beta, Core, Disorder, N2Strength,
                               N2Hydrophobicity, N2Volume, N2Surface
      -baseBiochemicalProperties <gene_feature> [(germline|mrca|parent)]
                             Base biochemical properties of specified gene feature normalized by AA
                               sequence size: N2Strength, N2Hydrophobicity, N2Surface, N2Volume,
                               Charge
